import { MasterClassStep } from "@/types/masterclass";

export const masterClassSteps: MasterClassStep[] = [
  {
    id: 1,
    title: "HTTP-сервисы и получение списка категорий",
    description:
      "Создайте функцию для получения всех категорий товаров. Заполните пропуски в коде, чтобы функция работала корректно.",
    theory: [
      "HTTP-сервис в 1С возвращает объект HTTPСервисОтвет",
      "Статус 200 означает успешное выполнение запроса",
      "Заголовок Content-Type должен быть application/json для JSON ответов",
      "Блок Попытка/Исключение обрабатывает ошибки выполнения",
    ],
    tasks: [],
    hints: [
      "Успешный HTTP статус: 200",
      "JSON заголовок: Content-Type: application/json",
      "Условие исключения групп: НЕ Категории.ЭтоГруппа",
      "Поля структуры: id, code, name",
      "Код внутренней ошибки: 500",
    ],
    answers: [],
  },
  {
    id: 2,
    title: "Работа с параметрами URL",
    description:
      "Дополните функцию получения конкретной категории. Добавьте валидацию параметров и обработку ошибок.",
    theory: [
      "Параметры URL доступны через Запрос.ПараметрыURL",
      "Всегда проверяйте наличие обязательных параметров",
      "Код 400 используется для некорректных запросов клиента",
      "Метод УстановитьПараметр используется для параметризованных запросов",
    ],
    tasks: [],
    hints: [
      "Получение параметров: Запрос.ПараметрыURL",
      "Проверка на Неопределено для обязательных параметров",
      "Код 400 для неверных запросов",
      "УстановитьПараметр для передачи параметров в запрос",
      "НЕ Выборка.Следующий() означает что записи не найдены",
    ],
    answers: [],
  },
  {
    id: 3,
    title: "Получение товаров с фильтрацией",
    description:
      "Реализуйте функцию получения товаров определенной категории. Добавьте все необходимые поля и условия фильтрации.",
    theory: [
      "Фильтрация по связанным справочникам через поле Категория",
      "Условие активности: Товары.Активен = Истина",
      "Исключение удаленных: НЕ Товары.ПометкаУдаления",
      "Структура товара включает все основные поля",
    ],
    tasks: [],
    hints: [
      "Поля товара: Ссылка, Код, Наименование, Артикул, Цена, ЕдиницаИзмерения, Активен",
      "Условия фильтрации: активные и без пометки удаления",
      "Метод Вставить для добавления полей в структуру",
      "Функция Строка() для преобразования типов",
    ],
    answers: [],
  },
  {
    id: 4,
    title: "Связанные данные и вложенные структуры",
    description:
      "Создайте функцию получения всех товаров с информацией о категориях. Изучите работу со связанными данными.",
    theory: [
      "Обращение к полям связанных объектов через точку",
      "Использование псевдонимов (КАК) для ясности",
      "Создание вложенных структур в JSON",
      "Оптимизация запросов через соединения",
    ],
    tasks: [],
    hints: [
      "Псевдонимы: Товары.Категория.Код КАК КодКатегории",
      "Создайте отдельную структуру для категории",
      "Метод Вставить для добавления вложенной структуры",
      "Поля категории: code, name",
    ],
    answers: [],
  },
  {
    id: 5,
    title: "Получение конкретного товара",
    description:
      "Реализуйте функцию получения товара по ID с полной валидацией и обработкой ошибок.",
    theory: [
      "Валидация GUID для идентификаторов",
      "Комплексная обработка ошибок",
      "Код 404 для не найденных ресурсов",
      "Полная структура товара с категорией",
    ],
    tasks: [],
    hints: [
      "Параметр товара: id_product",
      "Проверка формата GUID через Попытка/Исключение",
      "Код 404 для не найденных товаров",
      "Полная структура с товаром и категорией",
    ],
    answers: [],
  },
  {
    id: 6,
    title: "Оптимизация и вспомогательные функции",
    description:
      "Создайте универсальные функции для работы с ошибками и JSON. Добавьте пагинацию и поиск.",
    theory: [
      "Выделение общих функций уменьшает дублирование кода",
      "Универсальные функции для ошибок и JSON",
      "Пагинация: параметры page и limit",
      "Структурированные ответы с метаданными",
    ],
    tasks: [],
    hints: [
      "Функция СоздатьОтветОшибки для унификации ошибок",
      "Функция СоздатьJSONОтвет для стандартных ответов",
      "Смещение = (Страница - 1) * Лимит",
      "Структура ответа: data + meta",
      "Поиск через оператор ПОДОБНО",
    ],
    answers: [],
  },
];

export const masterClassContent = masterClassSteps;
