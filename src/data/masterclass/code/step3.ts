export const step3Code = {
  title: "Получение товаров с фильтрацией",
  description:
    "Реализуйте функцию получения товаров определенной категории. Добавьте все необходимые поля и условия фильтрации.",

  codeWithGaps: `Функция ПолучитьТоварыКатегории(Запрос)
    
    Попытка
        ПараметрыURL = Запрос.ПараметрыURL;
        ИдентификаторКатегории = ПараметрыURL.Получить("id_category");
        
        Если ИдентификаторКатегории = Неопределено Тогда
            Ответ = Новый HTTPСервисОтвет(400);
            Ответ.Заголовки.Вставить("Content-Type", "application/json");
            
            СтруктураОшибки = Новый Структура;
            СтруктураОшибки.Вставить("error", "Отсутствует обязательный параметр id_category");
            
            ЗаписьJSON = Новый ЗаписьJSON;
            ЗаписьJSON.УстановитьСтроку();
            ЗаписатьJSON(ЗаписьJSON, СтруктураОшибки);
            
            Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
            Возврат Ответ;
        КонецЕсли;
        
        Ответ = Новый HTTPСервисОтвет(200);
        Ответ.Заголовки.Вставить("Content-Type", "application/json");
        
        МассивТоваров = Новый Массив;
        
        ЗапросТоваров = Новый Запрос;
        ЗапросТоваров.Текст = 
            "ВЫБРАТЬ
            |   Товары.___BLANK_1___,
            |   Товары.___BLANK_2___,
            |   Товары.___BLANK_3___,
            |   Товары.___BLANK_4___,
            |   Товары.___BLANK_5___,
            |   Товары.___BLANK_6___,
            |   Товары.___BLANK_7___
            |ИЗ
            |   Справочник.Товары КАК Товары
            |ГДЕ
            |   Товары.Категория = &ИдентификаторКатегории
            |   И Товары.___BLANK_8___ = Истина
            |   И ___BLANK_9___";
            
        ЗапросТоваров.УстановитьПараметр("ИдентификаторКатегории", ИдентификаторКатегории);
        
        РезультатЗапроса = ЗапросТоваров.Выполнить();
        Выборка = РезультатЗапроса.Выбрать();
        
        Пока Выборка.Следующий() Цикл
            Товар = Новый Структура;
            Товар.___BLANK_10___("id", Строка(Выборка.Ссылка.УникальныйИдентификатор()));
            Товар.___BLANK_11___("code", Выборка.Код);
            Товар.___BLANK_12___("name", Выборка.Наименование);
            Товар.___BLANK_13___("article", ___BLANK_14___(Выборка.Артикул));
            Товар.___BLANK_15___("price", Выборка.Цена);
            Товар.___BLANK_16___("unit", ___BLANK_17___(Выборка.ЕдиницаИзмерения));
            Товар.___BLANK_18___("active", Выборка.Активен);
            
            МассивТоваров.Добавить(Товар);
        КонецЦикла;
        
        ЗаписьJSON = Новый ЗаписьJSON;
        ЗаписьJSON.УстановитьСтроку();
        ЗаписатьJSON(ЗаписьJSON, МассивТоваров);
        
        Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
        
        Возврат Ответ;
        
    Исключение
        Ответ = Новый HTTPСервисОтвет(500);
        Ответ.Заголовки.Вставить("Content-Type", "application/json");
        
        СтруктураОшибки = Новый Структура;
        СтруктураОшибки.Вставить("error", "Внутренняя ошибка сервера");
        СтруктураОшибки.Вставить("message", ОписаниеОшибки());
        
        ЗаписьJSON = Новый ЗаписьJSON;
        ЗаписьJSON.УстановитьСтроку();
        ЗаписатьJSON(ЗаписьJSON, СтруктураОшибки);
        
        Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
        
        Возврат Ответ;
    КонецПопытки;
    
КонецФункции`,

  completeCode: `Функция ПолучитьТоварыКатегории(Запрос)
    
    Попытка
        ПараметрыURL = Запрос.ПараметрыURL;
        ИдентификаторКатегории = ПараметрыURL.Получить("id_category");
        
        Если ИдентификаторКатегории = Неопределено Тогда
            Ответ = Новый HTTPСервисОтвет(400);
            Ответ.Заголовки.Вставить("Content-Type", "application/json");
            
            СтруктураОшибки = Новый Структура;
            СтруктураОшибки.Вставить("error", "Отсутствует обязательный параметр id_category");
            
            ЗаписьJSON = Новый ЗаписьJSON;
            ЗаписьJSON.УстановитьСтроку();
            ЗаписатьJSON(ЗаписьJSON, СтруктураОшибки);
            
            Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
            Возврат Ответ;
        КонецЕсли;
        
        Ответ = Новый HTTPСервисОтвет(200);
        Ответ.Заголовки.Вставить("Content-Type", "application/json");
        
        МассивТоваров = Новый Массив;
        
        ЗапросТоваров = Новый Запрос;
        ЗапросТоваров.Текст = 
            "ВЫБРАТЬ
            |   Товары.Ссылка,
            |   Товары.Код,
            |   Товары.Наименование,
            |   Товары.Артикул,
            |   Товары.Цена,
            |   Товары.ЕдиницаИзмерения,
            |   Товары.Активен
            |ИЗ
            |   Справочник.Товары КАК Товары
            |ГДЕ
            |   Товары.Категория = &ИдентификаторКатегории
            |   И Товары.Активен = Истина
            |   И НЕ Товары.ПометкаУдаления";
            
        ЗапросТоваров.УстановитьПараметр("ИдентификаторКатегории", ИдентификаторКатегории);
        
        РезультатЗапроса = ЗапросТоваров.Выполнить();
        Выборка = РезультатЗапроса.Выбрать();
        
        Пока Выборка.Следующий() Цикл
            Товар = Новый Структура;
            Товар.Вставить("id", Строка(Выборка.Ссылка.УникальныйИдентификатор()));
            Товар.Вставить("code", Выборка.Код);
            Товар.Вставить("name", Выборка.Наименование);
            Товар.Вставить("article", Строка(Выборка.Артикул));
            Товар.Вставить("price", Выборка.Цена);
            Товар.Вставить("unit", Строка(Выборка.ЕдиницаИзмерения));
            Товар.Вставить("active", Выборка.Активен);
            
            МассивТоваров.Добавить(Товар);
        КонецЦикла;
        
        ЗаписьJSON = Новый ЗаписьJSON;
        ЗаписьJSON.УстановитьСтроку();
        ЗаписатьJSON(ЗаписьJSON, МассивТоваров);
        
        Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
        
        Возврат Ответ;
        
    Исключение
        Ответ = Новый HTTPСервисОтвет(500);
        Ответ.Заголовки.Вставить("Content-Type", "application/json");
        
        СтруктураОшибки = Новый Структура;
        СтруктураОшибки.Вставить("error", "Внутренняя ошибка сервера");
        СтруктураОшибки.Вставить("message", ОписаниеОшибки());
        
        ЗаписьJSON = Новый ЗаписьJSON;
        ЗаписьJSON.УстановитьСтроку();
        ЗаписатьJSON(ЗаписьJSON, СтруктураОшибки);
        
        Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
        
        Возврат Ответ;
    КонецПопытки;
    
КонецФункции`,

  blanks: [
    {
      id: "BLANK_1",
      options: ["Код", "Наименование", "Ссылка", "Артикул"],
      correctAnswer: "Ссылка",
      hint: "Поле для ссылки на объект",
    },
    {
      id: "BLANK_2",
      options: ["Ссылка", "Наименование", "Код", "Артикул"],
      correctAnswer: "Код",
      hint: "Поле кода товара",
    },
    {
      id: "BLANK_3",
      options: ["Код", "Ссылка", "Наименование", "Артикул"],
      correctAnswer: "Наименование",
      hint: "Поле наименования товара",
    },
    {
      id: "BLANK_4",
      options: ["Код", "Наименование", "Артикул", "Цена"],
      correctAnswer: "Артикул",
      hint: "Поле артикула товара",
    },
    {
      id: "BLANK_5",
      options: ["Артикул", "ЕдиницаИзмерения", "Цена", "Активен"],
      correctAnswer: "Цена",
      hint: "Поле цены товара",
    },
    {
      id: "BLANK_6",
      options: ["Цена", "Активен", "ЕдиницаИзмерения", "Категория"],
      correctAnswer: "ЕдиницаИзмерения",
      hint: "Поле единицы измерения",
    },
    {
      id: "BLANK_7",
      options: ["ЕдиницаИзмерения", "Категория", "Активен", "ПометкаУдаления"],
      correctAnswer: "Активен",
      hint: "Поле активности товара",
    },
    {
      id: "BLANK_8",
      options: ["Активен", "ПометкаУдаления", "ЭтоГруппа", "Код"],
      correctAnswer: "Активен",
      hint: "Условие для активных товаров",
    },
    {
      id: "BLANK_9",
      options: [
        "НЕ Товары.ПометкаУдаления",
        "Товары.ПометкаУдаления",
        "НЕ Товары.ЭтоГруппа",
        "Товары.Активен",
      ],
      correctAnswer: "НЕ Товары.ПометкаУдаления",
      hint: "Условие исключения удаленных товаров",
    },
    {
      id: "BLANK_10",
      options: ["Вставить", "Добавить", "Установить", "Поместить"],
      correctAnswer: "Вставить",
      hint: "Метод для добавления поля в структуру",
    },
    {
      id: "BLANK_11",
      options: ["Вставить", "Добавить", "Установить", "Поместить"],
      correctAnswer: "Вставить",
      hint: "Метод для добавления поля в структуру",
    },
    {
      id: "BLANK_12",
      options: ["Вставить", "Добавить", "Установить", "Поместить"],
      correctAnswer: "Вставить",
      hint: "Метод для добавления поля в структуру",
    },
    {
      id: "BLANK_13",
      options: ["Вставить", "Добавить", "Установить", "Поместить"],
      correctAnswer: "Вставить",
      hint: "Метод для добавления поля в структуру",
    },
    {
      id: "BLANK_14",
      options: ["Строка", "Число", "Текст", "Значение"],
      correctAnswer: "Строка",
      hint: "Функция преобразования к строке",
    },
    {
      id: "BLANK_15",
      options: ["Вставить", "Добавить", "Установить", "Поместить"],
      correctAnswer: "Вставить",
      hint: "Метод для добавления поля в структуру",
    },
    {
      id: "BLANK_16",
      options: ["Вставить", "Добавить", "Установить", "Поместить"],
      correctAnswer: "Вставить",
      hint: "Метод для добавления поля в структуру",
    },
    {
      id: "BLANK_17",
      options: ["Строка", "Число", "Текст", "Значение"],
      correctAnswer: "Строка",
      hint: "Функция преобразования к строке",
    },
    {
      id: "BLANK_18",
      options: ["Вставить", "Добавить", "Установить", "Поместить"],
      correctAnswer: "Вставить",
      hint: "Метод для добавления поля в структуру",
    },
  ],

  theory: [
    "Фильтрация по связанным справочникам через поле Категория",
    "Условие активности: Товары.Активен = Истина",
    "Исключение удаленных: НЕ Товары.ПометкаУдаления",
    "Структура товара включает все основные поля",
    "Метод Вставить используется для добавления полей в структуру",
  ],

  hints: [
    "Поля товара: Ссылка, Код, Наименование, Артикул, Цена, ЕдиницаИзмерения, Активен",
    "Условия фильтрации: активные и без пометки удаления",
    "Метод Вставить для добавления полей в структуру",
    "Функция Строка() для преобразования типов",
  ],
};
